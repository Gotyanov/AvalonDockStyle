<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:stylizableWindowLib="clr-namespace:StylizableWindowLib">


    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <system:Double x:Key="TitlebarHeight">26</system:Double>

    <Color x:Key="HighlightBackgroundColor">#7FCFCFCF</Color>
    <Color x:Key="PressHighlightBackgroundColor">#FF4EA6EA</Color>
    <Color x:Key="HighlightForegroundColor">#FF333333</Color>
    <Color x:Key="PressHighlightForegroundColor">White</Color>
    <Color x:Key="AccentColor">White</Color>
    <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{DynamicResource AccentColor}" />
    <system:Double x:Key="WindowTitleFontSize">16</system:Double>
    <!--<FontFamily x:Key="HeaderFontFamily">Segoe UI Light, Lucida Sans Unicode, Verdana</FontFamily>-->
    <FontFamily x:Key="HeaderFontFamily">/StylizableWindowLib;component/Fonts/#Segoe UI Light</FontFamily>
    <system:Double x:Key="ContentFontSize">12</system:Double>
    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource WhiteColor}" />
    <SolidColorBrush x:Key="BlackBrush" Color="{StaticResource BlackColor}" />
    <SolidColorBrush x:Key="SemiTransparentWhiteBrush" Color="#55FFFFFF"/>
    <SolidColorBrush x:Key="TransparentWhiteBrush" Color="#00FFFFFF"/>
    <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource HighlightBackgroundColor}" />
    <SolidColorBrush x:Key="PressHighlightBrush" Color="{DynamicResource PressHighlightBackgroundColor}" />
    <SolidColorBrush x:Key="HighlightForegroundBrush" Color="{DynamicResource HighlightForegroundColor}" />
    <SolidColorBrush x:Key="PressHighlightForegroundBrush" Color="{DynamicResource PressHighlightForegroundColor}" />

    <!-- base button style for min, max and close window buttons -->
    <Style x:Key="MetroBaseWindowButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="Foreground"
                Value="#7F999999" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"/>
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background" Value="{DynamicResource PressHighlightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PressHighlightForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="#ADADAD" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- default button style for min, max and close window buttons -->
    <Style x:Key="MetroWindowButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MetroBaseWindowButtonStyle}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Width"
                Value="30" />
        <Setter Property="MaxHeight"
                Value="34" />
        <Setter Property="Padding"
                Value="0" />
    </Style>



    <ControlTemplate x:Key="WindowTemplateKey"
                     TargetType="{x:Type Window}">
        <Grid Background="{TemplateBinding Background}">
            <Border x:Name="PART_Border"
                    BorderBrush="{DynamicResource WindowTitleColorBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" >
                <DockPanel >

                    <Border x:Name="PART_WindowTitleBackground"
                        DockPanel.Dock="Top" 
                        Background="Transparent">
                        <Grid Height="{StaticResource TitlebarHeight}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Image x:Name="PART_Icon" Source="{TemplateBinding Icon}" Margin="6,3,0,2"/>
                            <TextBlock Grid.Column="1" 
                                   Text="{TemplateBinding Title}"
                                   TextTrimming="CharacterEllipsis"
                                   VerticalAlignment="Center"
                                   Margin="8 -1 0 0"
                                   FontSize="{DynamicResource WindowTitleFontSize}"
                                   FontFamily="{DynamicResource HeaderFontFamily}" />

                            <StackPanel Orientation="Horizontal" 
                                    Focusable="False"
                                    Panel.ZIndex="1"
                                    Grid.Column="2"
                                    VerticalAlignment="Top"
                                    Height="{StaticResource TitlebarHeight}">

                                <!--<Button Style="{StaticResource MetroWindowButtonStyle}">
                                    <Viewbox Height="24" Width="24" SnapsToDevicePixels="True">
                                        <Canvas Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Path Data="M9,22A1,1 0 0,1 8,21V18H4A2,2 0 0,1 2,16V4C2,2.89 2.9,2 4,2H20A2,2 0 0,1 22,4V16A2,2 0 0,1 20,18H13.9L10.2,21.71C10,21.9 9.75,22 9.5,22V22H9M10,16V19.08L13.08,16H20V4H4V16H10Z" 
                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                          />
                                        </Canvas>
                                        
                                    </Viewbox>
                                    
                                </Button>-->

                                <Button x:Name="PART_Min"
                                Focusable="False"
                                Style="{StaticResource MetroWindowButtonStyle}">
                                    <Path Data="M0,0L0,2 7.999,2 7.999,0 0,0z"
                                          Margin="0,8,0,0"
                                  SnapsToDevicePixels="True"
                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                </Button>


                                <Button x:Name="PART_Max"
                            Focusable="False"
                            Style="{StaticResource MetroWindowButtonStyle}">

                                    <Path x:Name="PART_MaxPath"
                                Width="10"
                                Height="10"
                                Data="M 0,9.999L0,0 9.998,0 9.998,9.999 0,9.999z M8.998,3L1,3 1,8.999 8.999,8.999 8.999,3 z"
                                SnapsToDevicePixels="True"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                </Button>


                                <Grid>
                                    <Grid.Resources>
                                        <SolidColorBrush x:Key="HighlightBrush" Color="#FFE04343" />
                                        <SolidColorBrush x:Key="PressHighlightBrush" Color="#FF993D3D" />
                                        <SolidColorBrush x:Key="HighlightForegroundBrush" Color="White" />
                                    </Grid.Resources>
                                    <Button x:Name="PART_Close"
                                Focusable="False"
                                RenderOptions.EdgeMode="Aliased"
                                Style="{StaticResource MetroWindowButtonStyle}">
                                        <Path Data="M 10.009,1.704 L 8.331,0.026 5.03,3.327 1.703,0 0,1.704 3.326,5.031 0.025,8.332 1.703,10.009 5.004,6.708 8.305,10.009 10.009,8.305 6.708,5.005"
                                  SnapsToDevicePixels="True"
                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                    </Button>
                                </Grid>
                            </StackPanel>

                        </Grid>
                    </Border>

                    <Grid>
                        <AdornerDecorator>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                        </AdornerDecorator>
                        <ResizeGrip x:Name="PART_WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="False" Visibility="Collapsed" VerticalAlignment="Bottom">
                            <ResizeGrip.Style>
                                <Style TargetType="ResizeGrip">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="{x:Static Cursors.SizeNWSE}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ResizeGrip.Style>
                        </ResizeGrip>
                    </Grid>
                </DockPanel>
            </Border>
        </Grid>

        <ControlTemplate.Triggers>

            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="PART_MaxPath"
                                    Property="Data"
                                    Value="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="PART_Icon"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="PART_Icon"
                        Property="MinWidth"
                        Value="0" />
            </Trigger>
            <Trigger Property="ResizeMode" Value="CanMinimize">
                <Setter TargetName="PART_Max"
                        Property="Visibility" 
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter TargetName="PART_Max"
                        Property="Visibility" 
                        Value="Collapsed"/>
                <Setter TargetName="PART_Min"
                        Property="Visibility" 
                        Value="Collapsed"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode"
                               Value="CanResizeWithGrip" />
                    <Condition Property="WindowState"
                               Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="PART_WindowResizeGrip"
                        Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Window}" x:Key="WindowKey">
        <Setter Property="Background" Value="#EBEBEB"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="TextElement.FontSize"
                Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="Template"
                Value="{StaticResource WindowTemplateKey}" />
        <Setter Property="stylizableWindowLib:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <stylizableWindowLib:StylizedBehaviorCollection>
                    <stylizableWindowLib:SubscribeWindowPartsBehavior/>
                    <stylizableWindowLib:BorderlessWindowBehavior/>
                </stylizableWindowLib:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>