<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock"
    xmlns:avalonDock="clr-namespace:Xceed.Wpf.AvalonDock;assembly=Xceed.Wpf.AvalonDock"
    xmlns:avalonDockControls="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
    xmlns:avalonDockConverters="clr-namespace:Xceed.Wpf.AvalonDock.Converters;assembly=Xceed.Wpf.AvalonDock"
    xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
    xmlns:stylizableWindowLib="clr-namespace:StylizableWindowLib;assembly=StylizableWindowLib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <avalonDockConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <avalonDockConverters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    <avalonDockConverters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter"/>
    <avalonDockConverters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter"/>
    <avalonDockConverters:NullToDoNothingConverter x:Key="NullToDoNothingConverter"/>
    <avalonDockConverters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter"/>
    <avalonDockConverters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter"/>


    <Style x:Key="MetroBaseWindowButtonStyle"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="#FFCCCCCC" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"/>
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background" Value="{DynamicResource PressHighlightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PressHighlightForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="#ADADAD" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- default button style for min, max and close window buttons -->
    <Style x:Key="MetroWindowButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MetroBaseWindowButtonStyle}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Width"
                Value="30" />
        <Setter Property="MaxHeight"
                Value="34" />
        <Setter Property="Padding"
                Value="0" />
    </Style>

    <Style x:Key="MetroWindowToggleButtonStyle"
           TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource MetroBaseWindowButtonStyle}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Width"
                Value="30" />
        <Setter Property="MaxHeight"
                Value="34" />
        <Setter Property="Padding"
                Value="0" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource PressHighlightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PressHighlightForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AvalonDockAtomToolButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#7FFFFFFF" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#7FFFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AvalonDockAtomButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#7FFFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--DocumentPaneControlStyle-->
    <Style x:Key="AvalonDockAtomDocumentPaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderToolBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <!--Following border is required to catch mouse events-->
                        <Border Background="Transparent" Grid.RowSpan="2"/>
                        <Grid  Panel.ZIndex="2" Margin="0,0,0,-1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DocumentPaneTabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
                            <avalonDockControls:DropDownButton
                                x:Name="MenuDropDownButton"
                                Style="{StaticResource AvalonDockAtomToolButtonStyle}"
                                Foreground="{DynamicResource UnactiveDocumentTitleForegroundBrush}"
                                Focusable="False"
                                VerticalAlignment="Center"
                                Grid.Column="1">
                                <avalonDockControls:DropDownButton.DropDownContextMenu>
                                    <avalonDockControls:ContextMenuEx
                                        ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                        <avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                            <Style TargetType="{x:Type avalonDockControls:MenuItemEx}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}"/>
                                                <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                                                <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}"/>
                                                <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}"/>
                                                <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}"/>
                                            </Style>
                                        </avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                    </avalonDockControls:ContextMenuEx>
                                </avalonDockControls:DropDownButton.DropDownContextMenu>
                                <Grid >
                                    <Path Data="M0,0L8,0 8,2 0,2 0,0" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:DropDownButton}}}" Margin="0,-4,0,0"/>
                                    <Path Data="F1M0,0L4,4 8,0 0,0z" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:DropDownButton}}}" Margin="0,0,0,-5"/>
                                </Grid>
                            </avalonDockControls:DropDownButton>
                        </Grid>
                        <Border x:Name="ContentPanel" 
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"  
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Cycle"
                                CornerRadius="0"
                                Panel.ZIndex="1"
                                Padding="0">
                            <ContentPresenter x:Name="PART_SelectedContentHost" 
                                              ContentSource="SelectedContent" 
                                              Margin="0"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" SourceName="MenuDropDownButton" Value="True">
                            <Setter Property="Foreground" TargetName="MenuDropDownButton" Value="{DynamicResource ActiveDocumentTitleForegroundBrush}">
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" SourceName="MenuDropDownButton" Value="True">
                            <Setter Property="Foreground" TargetName="MenuDropDownButton" Value="{DynamicResource ActiveDocumentTitleForegroundBrush}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource DocumentBackgroundBrush}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="MenuDropDownButton" />
                        </DataTrigger>                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Foreground" Value="{DynamicResource UnactiveDocumentTitleForegroundBrush}"/>
                    <Setter Property="Background" Value="{DynamicResource ToolBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                    <Setter Property="Width" Value="{DynamicResource TabWidth}"/>
                    <Setter Property="Height" Value="{DynamicResource TabHeight}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border Name="Bd_divider" BorderThickness="1,0,0,0" BorderBrush="{DynamicResource TabDividerBrush}">
                                    <Border x:Name="Bd" 
                                            Margin="-1,0"
							              BorderBrush="{TemplateBinding BorderBrush}"
   				                          BorderThickness="1,1,1,0" 
							              Background="{TemplateBinding Background}" 
							              Padding="{TemplateBinding Padding}">
                                        <Border Name="Bdi" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource BorderToolBrush}">
                                            <ContentPresenter
								                x:Name="Content" 
								                ContentSource="Header" 
                                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                RecognizesAccessKey="True" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </Border>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="true">
                                        <Setter Property="BorderBrush" Value="{DynamicResource BorderToolBrush}" />
                                        <Setter Property="Background" Value="{DynamicResource DocumentBackgroundBrush}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ActiveDocumentTitleForegroundBrush}"/>
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                        <Setter TargetName="Bd" Property="CornerRadius" Value="3,3,0,0"/>
                                        <Setter TargetName="Bdi" Property="BorderBrush" Value="{DynamicResource DocumentBackgroundBrush}" />
                                        <!--<Setter Property="Margin" Value="-1,0,-1,-4"/>
                                        <Setter Property="Margin" TargetName="Content" Value="0,0,0,3"/>-->
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="True"/>
                                            <Condition Binding="{Binding IsLastFocusedDocument}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{DynamicResource BorderToolBrush}" />
                                        <Setter Property="Background" Value="{DynamicResource DocumentBackgroundBrush}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ActiveDocumentTitleForegroundBrush}"/>
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="False"/>
                                            <Condition Binding="{Binding IsLastFocusedDocument}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{DynamicResource BorderToolBrush}" />
                                        <Setter Property="Background" Value="{DynamicResource DocumentBackgroundBrush}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ActiveDocumentTitleForegroundBrush}"/>
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </MultiDataTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="Selector.IsSelected" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="BorderBrush" Value="{DynamicResource BorderToolBrush}" />
                                        <Setter Property="Background" Value="{DynamicResource DocumentBackgroundBrush}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ActiveDocumentTitleForegroundBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentTabItem Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentControl Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--AnchorablePaneControlStyle-->
    <Style x:Key="AvalonDockAtomAnchorablePaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
        <Setter Property="TabStripPlacement" Value="Bottom"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderToolBrush}"/>
        <Setter Property="Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Background" Value="{Binding Model.Root.Manager.Background, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!--Following border is required to catch mouse events-->
                        <Border Background="Transparent" Grid.RowSpan="2"/>
                        <Border x:Name="ContentPanel" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" 
                                Grid.Column="0" 
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="0" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent" 
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <avalonDockControls:AnchorablePaneTabPanel x:Name="HeaderPanel" Margin="0,0,2,0" IsItemsHost="true" Grid.Row="1" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="1">
                            <Setter Property="Margin" Value="0" TargetName="HeaderPanel"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource ToolHeaderForegroundBrush}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border x:Name="Bd" Margin="0,-1,0,0"
							              BorderBrush="{TemplateBinding BorderBrush}"
   				                          BorderThickness="1,0,1,1" 
							              Background="{TemplateBinding Background}" 
							              Padding="{TemplateBinding Padding}">
                                        <Border Name="Bdi" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource BorderToolBrush}">
                                            <ContentPresenter Margin="6,3"
								            x:Name="Content" 
								            ContentSource="Header" 
                                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                            RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected"
								        Value="true">
                                            <Setter Property="BorderBrush"
									    Value="{DynamicResource BorderToolBrush}" />
                                            <Setter Property="Background"
									    Value="{DynamicResource ToolLightBackgroundBrush}" />
                                            <Setter Property="Panel.ZIndex" 
                                        Value="1" />
                                        <Setter Property="BorderBrush" TargetName="Bdi" Value="{DynamicResource ToolLightBackgroundBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="Selector.IsSelected" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{DynamicResource HightlightedBackgroundBrush}"/>
                                        <Setter Property="Background" Value="{DynamicResource HightlightedBackgroundBrush}"/>
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="BorderBrush" Value="{DynamicResource UnactiveToolTitleBackgroundBrush}"/>
                                        <Setter Property="Background" Value="{DynamicResource UnactiveToolTitleBackgroundBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource UnactiveToolTitleForegroundBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableTabItem Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableControl Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="avalonDockControls:AnchorablePaneTitle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="0,2,2,1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DropDownControlArea 
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter 
                                    x:Name="Header"            
                                    Margin="5,0,0,0"
                                    TextElement.Foreground="{DynamicResource UnactiveToolTitleForegroundBrush}"
                                    Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                                    ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </avalonDockControls:DropDownControlArea>


                            <avalonDockControls:DropDownButton
                                x:Name="MenuDropDownButton"
                                VerticalAlignment="Center"
                                Style="{StaticResource AvalonDockAtomToolButtonStyle}"
                                Focusable="False"
                                Grid.Column="1"
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
                                <Path Data="F1M0,0L4,4 8,0 0,0z" SnapsToDevicePixels="True" Fill="{Binding ElementName=Header, Path=(TextElement.Foreground)}"/>
                            </avalonDockControls:DropDownButton>
                            <Button x:Name="PART_AutoHidePin" 
                                Grid.Column="2" 
                                Focusable="False"
                                Style="{StaticResource AvalonDockAtomButtonStyle}"
                                    RenderOptions.EdgeMode="Aliased"
                                Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}" 
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}">
                                <Path Data="F1M3,11L3,7 0,7 0,6 1,6 1,1 1,0 6,0 6,1 6,6 7,6 7,7 4,7 4,11 3,11z M2,1L2,6 4,6 4,1 2,1z" SnapsToDevicePixels="True" Fill="{Binding ElementName=Header, Path=(TextElement.Foreground)}"/>
                            </Button>
                            <Button x:Name="PART_HidePin" 
                                Grid.Column="3" 
                                Focusable="False"
                                Style="{StaticResource AvalonDockAtomButtonStyle}"
                                    Foreground="{Binding ElementName=Header, Path=(TextElement.Foreground)}"
                                Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}" 
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}">
                                <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z" SnapsToDevicePixels="True" Fill="{Binding ElementName=Header, Path=(TextElement.Foreground)}"/>
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="LayoutTransform" TargetName="PART_AutoHidePin">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ActiveToolTitleBackgroundBrush}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource ActiveToolTitleForegroundBrush}" TargetName="Header"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="AvalonDockAtomAnchorSideTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel 
                        MinWidth="4"
                        MinHeight="4"
                        Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AvalonDockAtomAnchorGroupTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.LayoutTransform>
                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}"/>
            </ItemsControl.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AvalonDockAtomAnchorTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorControl}">
        <Border 
            x:Name="Bd"
            Background="{DynamicResource ToolBackgroundBrush}"
            Margin="0,4,0,0"
            SnapsToDevicePixels="True"
            RenderOptions.EdgeMode="Aliased"
            Padding="6,3">
            <ContentPresenter Name="Cp" SnapsToDevicePixels="True"
                    TextElement.Foreground="{DynamicResource UnactiveToolTitleForegroundBrush}"
                    Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                    ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                    ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Side" Value="Right">
                <Setter Property="Margin" Value="0,0,0,4" TargetName="Bd"/>
            </Trigger>
            <Trigger Property="Side" Value="Bottom">
                <Setter Property="Margin" Value="0,4,0,0" TargetName="Bd"/>
            </Trigger>
            <Trigger Property="Side" Value="Top">
                <Setter Property="Margin" Value="0,0,0,4" TargetName="Bd"/>
            </Trigger>            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="Selector.IsSelected" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ActiveToolTitleBackgroundBrush}" TargetName="Bd"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource ActiveToolTitleForegroundBrush}" TargetName="Cp"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type avalonDockControls:OverlayWindow}" TargetType="{x:Type avalonDockControls:OverlayWindow}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:OverlayWindow}">
                    <Canvas x:Name="PART_DropTargetsContainer" Opacity="0.9">
                        <Path x:Name="PART_PreviewBox" Fill="AliceBlue" StrokeThickness="2" Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        <Grid x:Name="PART_DockingManagerDropTargets" >
                            <Image x:Name="PART_DockingManagerDropTargetLeft" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/AvalonDock.Themes.Atom;component/Images/DockAnchorableLeft.PNG" Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetRight" VerticalAlignment="Center" HorizontalAlignment="Right" Source="/AvalonDock.Themes.Atom;component/Images/DockAnchorableRight.PNG" Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetBottom" VerticalAlignment="Bottom" HorizontalAlignment="Center" Source="/AvalonDock.Themes.Atom;component/Images/DockAnchorableBottom.PNG" Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetTop" VerticalAlignment="Top" HorizontalAlignment="Center" Source="/AvalonDock.Themes.Atom;component/Images/DockAnchorableTop.PNG" Stretch="None"/>
                        </Grid>
                        <Grid x:Name="PART_AnchorablePaneDropTargets">
                            <Grid Width="112" Height="112" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="/AvalonDock.Themes.Atom;component/Images/DockPaneEmpty.png" Stretch="None" Margin="0,0.5,0,-0.5"/>
                                <Border Name="PART_AnchorablePaneDropTargetTop" Grid.Column="1" Grid.Row="0" Margin="0,3.5,0, 0">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentAsAnchorableTop.png"  Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetRight" Grid.Column="2" Grid.Row="1" Margin="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentAsAnchorableRight.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetBottom" Grid.Column="1" Grid.Row="2" Margin="0,-0.5,0,0">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentAsAnchorableBottom.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetLeft" Grid.Column="0" Grid.Row="1" Margin="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentAsAnchorableLeft.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetInto" Grid.Column="1" Grid.Row="1" Margin="0,0.5,0,0">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentInside.png"  Stretch="None"/>
                                </Border>
                            </Grid>
                        </Grid>
                        <Grid x:Name="PART_DocumentPaneDropTargets" RenderOptions.EdgeMode="Aliased">
                            <Grid Width="112" Height="112" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="/AvalonDock.Themes.Atom;component/Images/DockPaneEmpty.PNG"  Stretch="None" SnapsToDevicePixels="True"/>
                                <Border Name="PART_DocumentPaneDropTargetTop" Grid.Column="1" Grid.Row="0" Margin="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentTop.png"  Stretch="None" SnapsToDevicePixels="True"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRight" Grid.Column="2" Grid.Row="1" Margin="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentRight.png"  Stretch="None" SnapsToDevicePixels="True"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottom" Grid.Column="1" Grid.Row="2" Margin="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentBottom.png"  Stretch="None" SnapsToDevicePixels="True"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeft" Grid.Column="0" Grid.Row="1" Margin="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentLeft.png"  Stretch="None" SnapsToDevicePixels="True"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetInto" Grid.Column="1" Grid.Row="1">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentInside.png"  Stretch="None" SnapsToDevicePixels="True"/>
                                </Border>
                            </Grid>
                        </Grid>

                        <Grid x:Name="PART_DocumentPaneFullDropTargets">
                            <Grid Width="184" Height="184" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="5" Grid.RowSpan="5" Source="/AvalonDock.Themes.Atom;component/Images/DockPaneLargeEmpty.PNG"  Stretch="None"/>
                                <Border Name="PART_DocumentPaneFullDropTargetTop" Grid.Column="2" Grid.Row="1">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentTop.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetRight" Grid.Column="3" Grid.Row="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentRight.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetBottom" Grid.Column="2" Grid.Row="3">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentBottom.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetLeft" Grid.Column="1" Grid.Row="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentLeft.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetInto" Grid.Column="2" Grid.Row="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentInside.png"  Stretch="None"/>
                                </Border>

                                <Border Name="PART_DocumentPaneDropTargetTopAsAnchorablePane" Grid.Column="2" Grid.Row="0">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentAsAnchorableTop.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRightAsAnchorablePane" Grid.Column="4" Grid.Row="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentAsAnchorableRight.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane" Grid.Column="2" Grid.Row="4">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentAsAnchorableBottom.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane" Grid.Column="0" Grid.Row="2">
                                    <Image Source="/AvalonDock.Themes.Atom;component/Images/DockDocumentAsAnchorableLeft.png"  Stretch="None" Margin="2"/>
                                </Border>

                            </Grid>
                        </Grid>

                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="AvalonDockAtomDocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="AvalonDockAtomAnchorableHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image x:Name="icon" Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform"/>
            <TextBlock x:Name="title" Margin="4,0,0,0" Text="{Binding Title}" TextOptions.TextFormattingMode="Display" TextTrimming="CharacterEllipsis" Grid.Column="1"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IconSource}" Value="{x:Null}">
                <Setter Property="Margin" Value="0" TargetName="title"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="AvalonDockAtomDocumentTitleTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="AvalonDockAtomAnchorableTitleTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDockAtomIconContentTemplate">
        <Image Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform"/>
    </DataTemplate>

    <ContextMenu x:Key="AvalonDockAtomAnchorableContextMenu">
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}" 
                Command="{Binding Path=FloatCommand}"/>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}" 
                Command="{Binding Path=DockCommand}"/>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}" 
                Command="{Binding Path=DockAsDocumentCommand}"/>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}" 
                Command="{Binding Path=AutoHideCommand}"/>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}" 
                Command="{Binding Path=HideCommand}"
                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
    </ContextMenu>

    <ContextMenu x:Key="AvalonDockAtomDocumentContextMenu">
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_Close}" 
                  Command="{Binding Path=CloseCommand}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}" 
                Command="{Binding Path=CloseAllButThisCommand}"/>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_Float}" 
                Command="{Binding Path=FloatCommand}"/>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}" 
                Command="{Binding Path=DockAsDocumentCommand}"/>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}" 
                Command="{Binding Path=NewHorizontalTabGroupCommand}"
                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Aero/Images/HTabGroup.png" Stretch="Uniform" Width="14"/>
            </MenuItem.Icon>
        </MenuItem>

        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}" 
                Command="{Binding Path=NewVerticalTabGroupCommand}"
                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <MenuItem.Icon>
            <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Aero/Images/VTabGroup.png" Stretch="Uniform" Width="14"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}" 
                Command="{Binding Path=MoveToNextTabGroupCommand}"
                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}" 
                Command="{Binding Path=MoveToPreviousTabGroupCommand}"
                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
    </ContextMenu>

    <!--DockingManager-->
    <Style x:Key="{x:Type avalonDock:DockingManager}" TargetType="{x:Type avalonDock:DockingManager}">
        <Setter Property="Background" Value="{DynamicResource ToolBackgroundBrush}"/>
        <Setter Property="DocumentPaneControlStyle" Value="{StaticResource AvalonDockAtomDocumentPaneControlStyle}"/>
        <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource AvalonDockAtomAnchorablePaneControlStyle}"/>
        <Setter Property="AnchorSideTemplate" Value="{StaticResource AvalonDockAtomAnchorSideTemplate}"/>
        <Setter Property="AnchorGroupTemplate" Value="{StaticResource AvalonDockAtomAnchorGroupTemplate}"/>
        <Setter Property="AnchorTemplate" Value="{StaticResource AvalonDockAtomAnchorTemplate}"/>
        <Setter Property="DocumentHeaderTemplate" Value="{StaticResource AvalonDockAtomDocumentHeaderTemplate}"/>
        <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource AvalonDockAtomAnchorableHeaderTemplate}"/>
        <Setter Property="DocumentTitleTemplate" Value="{StaticResource AvalonDockAtomDocumentTitleTemplate}"/>
        <Setter Property="AnchorableTitleTemplate" Value="{StaticResource AvalonDockAtomAnchorableTitleTemplate}"/>
        <Setter Property="AnchorableContextMenu" Value="{StaticResource AvalonDockAtomAnchorableContextMenu}"/>
        <Setter Property="DocumentContextMenu" Value="{StaticResource AvalonDockAtomDocumentContextMenu}"/>
        <Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource AvalonDockAtomDocumentHeaderTemplate}"/>
        <Setter Property="IconContentTemplate" Value="{StaticResource AvalonDockAtomIconContentTemplate}"/>
        <Setter Property="GridSplitterWidth" Value="4"/>
        <Setter Property="GridSplitterHeight" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding LayoutRootPanel}" Grid.Column="1" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding RightSidePanel}" Grid.Column="2" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding LeftSidePanel}" Grid.Column="0" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding TopSidePanel}" Grid.Column="1" Grid.Row="0"/>
                            <ContentPresenter Content="{TemplateBinding BottomSidePanel}" Grid.Column="1" Grid.Row="2"/>
                            <ContentPresenter 
                                x:Name="PART_AutoHideArea"
                                Content="{TemplateBinding AutoHideWindow}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LayoutGridResizerControl-->
    <Style x:Key="{x:Type avalonDockControls:LayoutGridResizerControl}" TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <!--<ContentPresenter Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                          ContentTemplate="{Binding LayoutItemTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                          ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
                    <avalonDockControls:DropDownControlArea
                            DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
                            DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" >
                        
                        <Border 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="0,2,0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="2" Background="Transparent"/>
                                <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                                                  VerticalAlignment="Center" HorizontalAlignment="Center"
                                              ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                              ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
                                <!-- Close button should be moved out to the container style -->
                                <Button 
                                    x:Name="DocumentCloseButton" 
                                    RenderOptions.EdgeMode="Aliased"
                                    Style="{StaticResource MetroWindowButtonStyle}"
                                    Background="Transparent"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Grid.Column="1" 
                                    Margin="5,0,0,0" 
                                    Visibility="Hidden"
                                    Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}">
                                    <Path Data="M 10.009,1.704 L 8.331,0.026 5.03,3.327 1.703,0 0,1.704 3.326,5.031 0.025,8.332 1.703,10.009 5.004,6.708 8.305,10.009 10.009,8.305 6.708,5.005"
                                  SnapsToDevicePixels="True"
                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                </Button>
                            </Grid>
                            </Border>
                    </avalonDockControls:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton"  />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=CanClose}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="DocumentCloseButton"  />
                        </DataTrigger>
                        <Trigger SourceName="DocumentCloseButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="Foreground" Value="{DynamicResource ActiveDocumentTitleForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
                    <avalonDockControls:DropDownControlArea 
                            DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}"
                            DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                                          ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                          ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
                                <avalonDockControls:DropDownControlArea 
                                Grid.Column="0"
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                        </Border>
                    </avalonDockControls:DropDownControlArea>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
        <Setter Property="Background" Value="{DynamicResource ToolLightBackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
                    <Border SnapsToDevicePixels="True"
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="Header"
                                Background="{DynamicResource UnactiveToolTitleBackgroundBrush}">
                                <avalonDockControls:AnchorablePaneTitle 
                                    Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Border>
                            <ContentPresenter 
                                Grid.Row="1"
                                FlowDirection="{TemplateBinding FlowDirection}"
                                Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}"/>

                            <!--<ContentPresenter 
                                Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                ContentTemplate="{Binding LayoutItemTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                Grid.Row="1"/>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Header"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CornerRadius="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="ShowInTaskbar" Value="True"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="TextElement.FontSize"
                Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="stylizableWindowLib:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <stylizableWindowLib:StylizedBehaviorCollection>
                    <stylizableWindowLib:SubscribeWindowPartsBehavior/>
                    <stylizableWindowLib:BorderlessWindowBehavior/>
                </stylizableWindowLib:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="PART_Border"
                    BorderBrush="{DynamicResource WindowTitleColorBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" >
                            <DockPanel >

                                <Border x:Name="PART_WindowTitleBackground"
                        DockPanel.Dock="Top" 
                        Background="{DynamicResource WindowTitleColorBrush}">
                                    <Grid Height="{StaticResource TitlebarHeight}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Image x:Name="PART_Icon" Source="{TemplateBinding Icon}" Margin="6,3,0,2"/>
                                        <!--<TextBlock Grid.Column="1" 
                                   Text="{TemplateBinding Title}"
                                   TextTrimming="CharacterEllipsis"
                                   VerticalAlignment="Center"
                                   Margin="8 -1 0 0"
                                   FontSize="{DynamicResource WindowTitleFontSize}"
                                   FontFamily="{DynamicResource HeaderFontFamily}" />-->

                                        <ContentPresenter Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}"  Grid.Column="1" Margin="6"
                                                  ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <StackPanel Orientation="Horizontal" 
                                    Focusable="False"
                                    Panel.ZIndex="1"
                                    Grid.Column="2"
                                    VerticalAlignment="Top"
                                    Height="{StaticResource TitlebarHeight}">

                                            <Button x:Name="PART_Min"
                                Focusable="False"
                                Style="{StaticResource MetroWindowButtonStyle}">
                                                <Path Data="M0,0L0,2 7.999,2 7.999,0 0,0z"
                                          Margin="0,8,0,0"
                                  SnapsToDevicePixels="True"
                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                            </Button>


                                            <Button x:Name="PART_Max"
                            Focusable="False"
                            Style="{StaticResource MetroWindowButtonStyle}">

                                                <Path x:Name="PART_MaxPath"
                                Width="10"
                                Height="10"
                                Data="M 0,9.999L0,0 9.998,0 9.998,9.999 0,9.999z M8.998,3L1,3 1,8.999 8.999,8.999 8.999,3 z"
                                SnapsToDevicePixels="True"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                            </Button>


                                            <Grid>
                                                <Grid.Resources>
                                                    <SolidColorBrush x:Key="HighlightBrush" Color="#FFE04343" />
                                                    <SolidColorBrush x:Key="PressHighlightBrush" Color="#FF993D3D" />
                                                    <SolidColorBrush x:Key="HighlightForegroundBrush" Color="White" />
                                                </Grid.Resources>
                                                <Button x:Name="PART_Close"
                                Focusable="False"
                                RenderOptions.EdgeMode="Aliased"
                                Style="{StaticResource MetroWindowButtonStyle}">
                                                    <Path Data="M 10.009,1.704 L 8.331,0.026 5.03,3.327 1.703,0 0,1.704 3.326,5.031 0.025,8.332 1.703,10.009 5.004,6.708 8.305,10.009 10.009,8.305 6.708,5.005"
                                  SnapsToDevicePixels="True"
                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                                </Button>
                                            </Grid>
                                        </StackPanel>

                                    </Grid>
                                </Border>

                                <Grid>
                                    <AdornerDecorator>
                                        <ContentPresenter Name="Cp"  Margin="6"
                                            ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                    </AdornerDecorator>
                                    <ResizeGrip x:Name="PART_WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="False" Visibility="Collapsed" VerticalAlignment="Bottom">
                                        <ResizeGrip.Style>
                                            <Style TargetType="ResizeGrip">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Cursor" Value="{x:Static Cursors.SizeNWSE}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ResizeGrip.Style>
                                    </ResizeGrip>
                                </Grid>
                            </DockPanel>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_MaxPath"
                                    Property="Data"
                                    Value="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
                            <Setter TargetName="Cp" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="PART_Icon"
                        Property="Visibility"
                        Value="Collapsed" />
                            <Setter TargetName="PART_Icon"
                        Property="MinWidth"
                        Value="0" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="PART_Max"
                        Property="Visibility" 
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="PART_Max"
                        Property="Visibility" 
                        Value="Collapsed"/>
                            <Setter TargetName="PART_Min"
                        Property="Visibility" 
                        Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode"
                               Value="CanResizeWithGrip" />
                                <Condition Property="WindowState"
                               Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                        TargetName="PART_WindowResizeGrip"
                        Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CornerRadius="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="ShowInTaskbar" Value="True"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="TextElement.FontSize"
                Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="stylizableWindowLib:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <stylizableWindowLib:StylizedBehaviorCollection>
                    <stylizableWindowLib:SubscribeWindowPartsBehavior/>
                    <stylizableWindowLib:BorderlessWindowBehavior/>
                </stylizableWindowLib:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="PART_Border"
                    BorderBrush="{DynamicResource WindowTitleColorBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" >
                            <DockPanel >

                                <Border x:Name="PART_WindowTitleBackground"
                        DockPanel.Dock="Top" 
                        Background="{DynamicResource WindowTitleColorBrush}">
                                    <Grid Height="{StaticResource TitlebarHeight}">
                                        <Grid.ColumnDefinitions>
                                            
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Border
                                            Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <avalonDockControls:DropDownControlArea 
                                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ContentPresenter Margin="6"
                                                      Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}" 
                                                      ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </avalonDockControls:DropDownControlArea>
                                        </Border>

                                        <StackPanel Orientation="Horizontal" 
                                    Focusable="False"
                                    Panel.ZIndex="1"
                                    Grid.Column="1"
                                    VerticalAlignment="Top"
                                    Height="{StaticResource TitlebarHeight}">

                                            <avalonDockControls:DropDownButton
                                            x:Name="SinglePaneContextMenu"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Style="{StaticResource MetroWindowToggleButtonStyle}"
                                            Focusable="False"
                                            DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
                                                <Path Data="F1M0,0L4,4 8,0 0,0z" SnapsToDevicePixels="True" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:DropDownButton}}}"/>
                                            </avalonDockControls:DropDownButton>

                                            <Button x:Name="PART_Min"
                                Focusable="False"
                                Style="{StaticResource MetroWindowButtonStyle}">
                                                <Path Data="M0,0L0,2 7.999,2 7.999,0 0,0z"
                                          Margin="0,8,0,0"
                                  SnapsToDevicePixels="True"
                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                            </Button>


                                            <Button x:Name="PART_Max"
                            Focusable="False"
                            Style="{StaticResource MetroWindowButtonStyle}">

                                                <Path x:Name="PART_MaxPath"
                                Width="10"
                                Height="10"
                                Data="M 0,9.999L0,0 9.998,0 9.998,9.999 0,9.999z M8.998,3L1,3 1,8.999 8.999,8.999 8.999,3 z"
                                SnapsToDevicePixels="True"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                            </Button>


                                            <Grid>
                                                <Grid.Resources>
                                                    <SolidColorBrush x:Key="HighlightBrush" Color="#FFE04343" />
                                                    <SolidColorBrush x:Key="PressHighlightBrush" Color="#FF993D3D" />
                                                    <SolidColorBrush x:Key="HighlightForegroundBrush" Color="White" />
                                                </Grid.Resources>
                                                <Button x:Name="PART_Close"
                                Focusable="False"
                                RenderOptions.EdgeMode="Aliased"
                                Style="{StaticResource MetroWindowButtonStyle}">
                                                    <Path Data="M 10.009,1.704 L 8.331,0.026 5.03,3.327 1.703,0 0,1.704 3.326,5.031 0.025,8.332 1.703,10.009 5.004,6.708 8.305,10.009 10.009,8.305 6.708,5.005"
                                  SnapsToDevicePixels="True"
                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                                </Button>
                                            </Grid>
                                        </StackPanel>

                                    </Grid>
                                </Border>

                                <Grid>
                                    <AdornerDecorator>
                                        <ContentPresenter Name="Cp"  Content="{TemplateBinding Content}" Margin="6"/>
                                    </AdornerDecorator>
                                    <ResizeGrip x:Name="PART_WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="False" Visibility="Collapsed" VerticalAlignment="Bottom">
                                        <ResizeGrip.Style>
                                            <Style TargetType="ResizeGrip">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Cursor" Value="{x:Static Cursors.SizeNWSE}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ResizeGrip.Style>
                                    </ResizeGrip>
                                </Grid>
                            </DockPanel>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_MaxPath"
                                    Property="Data"
                                    Value="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
                            <Setter TargetName="Cp" Property="Margin" Value="0"/>
                        </Trigger>
                        
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="PART_Max"
                        Property="Visibility" 
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="PART_Max"
                        Property="Visibility" 
                        Value="Collapsed"/>
                            <Setter TargetName="PART_Min"
                        Property="Visibility" 
                        Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode"
                               Value="CanResizeWithGrip" />
                                <Condition Property="WindowState"
                               Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                        TargetName="PART_WindowResizeGrip"
                        Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="{x:Type avalonDockControls:LayoutAutoHideWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAutoHideWindowControl}">
        <Setter Property="Background" Value="{DynamicResource HightlightedBackgroundBrush}"/>
    </Style>


    <Style x:Key="AvalonDockAtomNavigatorWindowListBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle RadiusY="2" RadiusX="2" Stroke="#8E6EA6F5" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="AvalonDockAtomNavigatorWindowListBoxItemHoverFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF1FBFF" Offset="0"/>
        <GradientStop Color="#FFD5F1FE" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AvalonDockAtomNavigatorWindowListBoxItemSelectedFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFD9F4FF" Offset="0"/>
        <GradientStop Color="#FF9BDDFB" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AvalonDockAtomNavigatorWindowListBoxItemSelectedInactiveFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEEEDED" Offset="0"/>
        <GradientStop Color="#FFDDDDDD" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AvalonDockAtomNavigatorWindowListBoxItemSelectedHoverFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEAF9FF" Offset="0"/>
        <GradientStop Color="#FFC9EDFD" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="AvalonDockAtomNavigatorWindowListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource AvalonDockAtomNavigatorWindowListBoxItemFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="2" SnapsToDevicePixels="true">
                        <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="UpperHighlight" Fill="#75FFFFFF" Visibility="Collapsed"/>
                                <ContentPresenter Grid.RowSpan="2" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource AvalonDockAtomNavigatorWindowListBoxItemSelectedFill}"/>
                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                            <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                            <Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{StaticResource AvalonDockAtomNavigatorWindowListBoxItemSelectedFill}"/>
                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                            <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                            <Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF"/>
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource AvalonDockAtomNavigatorWindowListBoxItemSelectedHoverFill}"/>
                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                        </MultiTrigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:NavigatorWindow}" TargetType="{x:Type avalonDockControls:NavigatorWindow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    ResizeBorderThickness="10"
                    CaptionHeight="16"
                    CornerRadius="3,3,3,3"
                    GlassFrameThickness="4"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:NavigatorWindow}">
                    <Grid>
                        <Border x:Name="WindowBorder" BorderThickness="1"
                                CornerRadius="3"
                                Background="{DynamicResource DocumentBackgroundBrush}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="54"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image 
                                            Source="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                                            Stretch="None"
                                            Visibility="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource BoolToVisibilityConverter} }"/>
                                        <TextBlock Text="{Binding SelectedDocument.LayoutElement.Title}" TextTrimming="CharacterEllipsis" Grid.Column="1" VerticalAlignment="Center" FontWeight="Bold" Margin="4,0,0,0"/>
                                    </Grid>
                                    <TextBlock Text="{Binding SelectedDocument.LayoutElement.Description}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
                                </Grid>

                                <Border Grid.Row="1" 
                                        BorderBrush="{DynamicResource BorderToolBrush}"
                                        BorderThickness="0,1,0,0"
                                        Background="{DynamicResource ToolBackgroundBrush}"
                                        MinHeight="200" >
                                    <Grid  Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Active Tool Windows" FontWeight="Bold" Margin="0,3,0,4"/>
                                            <ListBox Grid.Row="1" 
                                                     ItemsSource="{Binding Anchorables}"
                                                     SelectedItem="{Binding SelectedAnchorable, Mode=TwoWay}" 
                                                     ItemContainerStyle="{StaticResource AvalonDockAtomNavigatorWindowListBoxItemStyle}"
                                                     Background="Transparent" 
                                                     BorderThickness="0"
                                                     MaxHeight="400">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16"/>
                                                                <ColumnDefinition Width="150"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="None"/>
                                                            <TextBlock Text="{Binding LayoutElement.Title}" TextTrimming="CharacterEllipsis" Grid.Column="1" Margin="4,0,0,0"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </Grid>
                                        <Grid Grid.Column="1" Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Active Files" FontWeight="Bold" Margin="0,3,0,4"/>
                                            <ListBox 
                                                Grid.Row="1" 
                                                ItemsSource="{Binding Documents}" 
                                                SelectedItem="{Binding SelectedDocument, Mode=TwoWay}" 
                                                ItemContainerStyle="{StaticResource AvalonDockAtomNavigatorWindowListBoxItemStyle}"
                                                Background="Transparent" 
                                                BorderThickness="0" 
                                                MaxHeight="400">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16"/>
                                                                <ColumnDefinition Width="150"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="None"/>
                                                            <TextBlock Text="{Binding LayoutElement.Title}" TextTrimming="CharacterEllipsis" Grid.Column="1" Margin="4,0,0,0"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Orientation="Vertical"/>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </Grid>
                                    </Grid>
                                </Border>

                                <Grid Grid.Row="2" Margin="5">
                                    <TextBlock Text="{Binding SelectedDocument.LayoutElement.ToolTip}" VerticalAlignment="Center"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


</ResourceDictionary>
